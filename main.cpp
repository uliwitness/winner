#include <iostream>
#include "framebuffer.hpp"

using namespace std;
using namespace winner;

int main()
{
    framebuffer myfb;
    if( !myfb.valid() )
	{
		return 1;
	}
	
	myfb.image().fill_rect( 0, 0, myfb.image().width(), myfb.image().height(), 0xff, 0xff, 0xff, 0xff );
	myfb.image().fill_rect( 100, 100, 200, 50, 0x00, 0xff, 0x00, 0xff );
	myfb.image().stroke_rect( 100, 100, 200, 50, 0xff, 0x00, 0x00, 0xff, 1 );
	myfb.image().stroke_rect( 0, 0, myfb.image().width(), myfb.image().height(), 0x00, 0x00, 0xff, 0xff, 2 );
	myfb.image().fill_circle( 170, 170, 50, 0xff, 0x00, 0x00, 0xff );
	myfb.image().stroke_circle( 170, 170, 50, 0xff, 0x00, 0xff, 0xff, 1 );
	myfb.image().stroke_circle( 30, 30, 40, 0xff, 0xee, 0xee, 0xff, 4 );
	myfb.image().stroke_line( 40, 80, 600, 400, 0x00, 0xff, 0xee, 0xff, 3 );
	myfb.image().stroke_line( 40, 80, 600, 80, 0x00, 0x00, 0x00, 0xff, 4 );
	myfb.image().stroke_line( 40, 80, 40, 400, 0x00, 0x00, 0x00, 0xff, 4 );
	
	uint8_t		letterA[] =
						{
							0xff, 0xff, 0xff, 0x00,  0xff, 0xff, 0xff, 0x00,  0x00, 0x00, 0x00, 0xff,  0xff, 0xff, 0xff, 0x00,  0xff, 0xff, 0xff, 0x00,
							0xff, 0xff, 0xff, 0x00,  0x00, 0x00, 0x00, 0xff,  0xff, 0xff, 0xff, 0x00,  0x00, 0x00, 0x00, 0xff,  0xff, 0xff, 0xff, 0x00,
							0xff, 0xff, 0xff, 0x00,  0x00, 0x00, 0x00, 0xff,  0xff, 0xff, 0xff, 0x00,  0x00, 0x00, 0x00, 0xff,  0xff, 0xff, 0xff, 0x00,
							0x00, 0x00, 0x00, 0xff,  0x00, 0x00, 0x00, 0xff,  0x00, 0x00, 0x00, 0xff,  0x00, 0x00, 0x00, 0xff,  0x00, 0x00, 0x00, 0xff,
							0x00, 0x00, 0x00, 0xff,  0xff, 0xff, 0xff, 0x00,  0xff, 0xff, 0xff, 0x00,  0xff, 0xff, 0xff, 0x00,  0x00, 0x00, 0x00, 0xff,
							0x00, 0x00, 0x00, 0xff,  0xff, 0xff, 0xff, 0x00,  0xff, 0xff, 0xff, 0x00,  0xff, 0xff, 0xff, 0x00,  0x00, 0x00, 0x00, 0xff,
						};
	image		letterAImage;
	letterAImage.init( 5, 6, letterA, false, 32 );
	
	myfb.image().draw_image( 110, 110, letterAImage );
	
	myfb.flush();	// Currently a no-op on Linux, but needed on Mac for drawing to actually be shown in UI.
	
	int		r,g,b,a;
	myfb.image().set_pixel( 4, 4, 0xff, 0x00, 0x00, 0xff );
	myfb.image().get_pixel( 4, 4, &r, &g, &b, &a );
	cout << r << " " << g << " " << b << " " << a << endl;
	
    return 0;
}
